<% if result_set_presenter.user_supplied_keywords.length > 0 %>
  <% content_for :title, "#{result_set_presenter.user_supplied_keywords} - #{content_item.title}" %>
<% else %>
  <% content_for :title, content_item.title %>
<% end %>
<% content_for :head do %>
  <%= auto_discovery_link_tag(:atom, signup_links[:feed_link]) %>
  <%= render 'finder_meta', content_item: content_item %>
<% end %>

<% content_for :meta_title, content_item.title %>

<% if topic_finder?(filter_params) && !content_item.all_content_finder? %>
  <% content_for :body_classes, "full-width" %>
  <% inverse = true %>
<% end %>

<form method="get" action="<%= content_item.base_path %>" class="js-live-search-form">
  <input type="hidden" name="parent" value="<%= @parent %>">

  <% if topic_finder?(filter_params) && !content_item.all_content_finder? %>
    <%= render "govuk_publishing_components/components/inverse_header", {
      full_width: true
    } do %>
      <%= render partial: 'show_header', locals: {
        inverse: inverse,
        page_metadata: page_metadata(content_item, filter_params)
      } %>
    <% end %>
  <% else %>
    <%= render partial: 'show_header', locals: {
      inverse: inverse,
      page_metadata: page_metadata(content_item, filter_params)
    } %>
  <% end %>

  <div class="govuk-width-container">
    <div class="govuk-grid-row">
      <div class="govuk-grid-column-one-third">
        <%= render partial: 'facet_collection'%>
      </div>


      <div class="govuk-grid-column-two-thirds js-live-search-results-block filtered-results"
        role="region"
        aria-label="<%= content_item.title %> search results"
        data-analytics-ecommerce
        data-ecommerce-start-index="<%= result_set_presenter.start_offset %>"
        data-list-title="<%= content_item.title %>"
        data-search-query="<%= result_set_presenter.user_supplied_keywords %>"
        <% unless result_set_presenter.sort_option.nil? %>
          data-ecommerce-variant="<%= result_set_presenter.sort_option[:data_track_label] %>"
        <% end %>
        >
        <div id="js-search-results-info" data-module="remove-filter" class="result-info">
          <div class="govuk-grid-row">
            <div class="govuk-grid-column-one-third">
              <div class="result-info__header">
                <%= render "govuk_publishing_components/components/heading", {
                  text: result_set_presenter.displayed_total,
                  id: "js-result-count",
                  font_size: "s"
                  } %>
              </div>
            </div>
            <div class="govuk-grid-column-two-thirds subscription-links subscription-links--desktop">
              <%= render "govuk_publishing_components/components/subscription-links", signup_links %>
            </div>
          </div>
          <div id="js-facet-tag-wrapper" class="facet-tags__container" aria-live="assertive">
            <%= render "facet_tags", facet_tags.present %>
          </div>
        </div>

        <div class="govuk-caption-l live-search-loading-message" id="js-loading-message"></div>

        <div id="js-sort-options">
          <%= render "sort_options", @sort_presenter.to_hash %>
        </div>

        <div id="js-results">
          <%= render "search_results", result_set_presenter.search_results_content %>
        </div>

        <div id="js-pagination">
          <%= render "govuk_publishing_components/components/previous_and_next_navigation", @pagination.next_and_prev_links %>
        </div>

        <div class="subscription-links" id="subscription-links-footer">
          <%= render "govuk_publishing_components/components/subscription-links", signup_links %>
        </div>
      </div>
    </div>
  </div>
</form>




<style>

  /*
  PLEASE NOTE
  This code is for a demo/prototype and is not intended to be production ready (nor is it!)
  */

.wrapper{
    max-width: 450px;
    margin: 150px auto;
  }

  .search-input input{
    height: 55px;
    width: 100%;
  }

   .autocom-box{
    padding: 0;
    opacity: 0;
    pointer-events: none;
    max-height: 280px;
    overflow-y: auto;
  }

  .search-input.active .autocom-box{
    padding: 10px 8px;
    opacity: 1;
    pointer-events: auto;
  }

  .autocom-box li{
    list-style: none;
    padding: 8px 12px;
    display: none;
    width: 100%;
    cursor: default;
    border: 1px solid #ccc;
  }

  .search-input.active .autocom-box li{
    display: block;
  }
  .autocom-box li:hover{
    background: #efefef;
  }

  .gem-c-search {
    margin-bottom: 0px !important;
  }

</style>


<script>

  // PLEASE NOTE
  // This code is for a demo/prototype and is not intended to be production ready (nor is it!)
  let objects = <%= Search::QueryExtender.verb_extensions.to_json.html_safe %>;
  let verbs = <%= Search::QueryExtender.object_extensions.to_json.html_safe %>;

  // getting all required elements
  const searchWrapper = document.querySelector(".search-input");
  const inputBox = document.querySelector(".gem-c-search__input");
  const suggBox = document.querySelector(".autocom-box");
  let webLink;

  // if user press any key and release
  inputBox.onkeyup = (e)=>{
    let userData = e.target.value; //user enetered data
    let emptyArray = [];
    if(userData){
      let words = userData.split(" ");
      for(var wordIndex = 0; wordIndex < words.length; ++wordIndex){
        let word = words[wordIndex];
        if(typeof objects[word] != "undefined") {
          for(i=0; i<objects[word].length; ++i){
            var entry = objects[word][i];
            emptyArray.push(entry[2])
          }
        }
        if(typeof verbs[word] != "undefined") {
          for(i=0; i<verbs[word].length; ++i){
            var entry = verbs[word][i];
            emptyArray.push(entry[2])
          }
        }
      }

      emptyArray = emptyArray.map((data)=>{
        // passing return data inside li tag
        return data = '<li>'+ data +'</li>';
      });
      searchWrapper.classList.add("active"); //show autocomplete box
      showSuggestions(emptyArray);
      let allList = suggBox.querySelectorAll("li");
      for (let i = 0; i < allList.length; i++) {
        //adding onclick attribute in all li tag
        allList[i].setAttribute("onclick", "select(this)");
      }
    }else{
      searchWrapper.classList.remove("active"); //hide autocomplete box
    }
  }

  function select(element){
    let selectData = element.textContent;
    inputBox.value = selectData;
    searchWrapper.classList.remove("active");
    document.querySelector(".js-live-search-form").submit();
  }

  function showSuggestions(list){
    let listData;
    if(!list.length){
      userValue = inputBox.value;
      listData = '<li>'+ userValue +'</li>';
    }else{
      listData = list.join('');
    }
    suggBox.innerHTML = listData;
  }

</script>
